FROM pytorch/pytorch:1.7.1-cuda11.0-cudnn8-runtime

# 0. 시간 지정
RUN apt-get update && apt-get install -y tzdata
ENV TZ=Asia/Seoul
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# 1. 경로 지정
ARG SOURCE_APP_DIR=/APP
ARG NGINX_INSTALL_DIR=/APP/nginx_install

# 2. 기본 패키지 설치
COPY    /APP/apt-get.conf.d/sources.list /etc/apt/sources.list

RUN     apt-get update -y && apt-get install -y --no-install-recommends \
        vim \
        tar \
        gcc \
        make \
        build-essential \
        pkg-config \
        default-libmysqlclient-dev \
        git \
        telnet \
        init \
        systemd \
        net-tools

RUN     rm -rf /APP/apt-get.conf.d

# 2. 폴더 생성
RUN     mkdir /APP_LOG \
        /APP_LOG/gunicorn \
        /APP_LOG/nginx

RUN     cd /APP_LOG/gunicorn && touch access.log error.log
RUN     cd /APP_LOG/gunicorn && chmod 777 access.log error.log

# 4. nginx 설치 및 세팅
COPY    $SOURCE_APP_DIR/nginx_install $NGINX_INSTALL_DIR

RUN     groupadd nginx && useradd -g nginx -s /bin/bash -m nginx
RUN     cd $NGINX_INSTALL_DIR/install/nginx-1.20.1 && ./configure \
        --prefix=/APP/nginx \
        --user=nginx \
        --with-zlib=$NGINX_INSTALL_DIR/install/zlib-1.3 \
        --with-pcre=$NGINX_INSTALL_DIR/install/pcre-8.45 \
        --with-openssl=$NGINX_INSTALL_DIR/install/openssl-1.1.1j \
        --with-http_ssl_module \
        --with-http_stub_status_module \
        --with-http_realip_module \
        --with-http_v2_module && \
        make -j && make install

RUN     cp -r $NGINX_INSTALL_DIR/conf /APP/nginx
RUN     rm -rf $NGINX_INSTALL_DIR

# 5. 소스 및 설정파일 복사
# COPY    $SOURCE_APP_DIR/aiapplus /APP/aiapplus
RUN	cd /APP && git clone -b dev/penny http://192.168.201.39:8991/2300204/aiapplus_new.git aiapplus

# 6. pip 라이브러리 다운로드
#COPY    $SOURCE_APP_DIR/angie /APP/angie
RUN     cd /APP && python -m venv .venv
RUN 	/APP/.venv/bin/pip install --no-cache-dir gunicorn
RUN     /APP/.venv/bin/pip install --no-cache-dir Django
#RUN     /APP/.venv/bin/pip install --no-cache-dir -r /APP/aiapplus/dashboard/requirements.txt

# 7. service 생성
COPY    $SOURCE_APP_DIR/service/* /etc/systemd/system/

# 8. 자동 실행 스크립트 수행
COPY    $SOURCE_APP_DIR/docker-entrypoint.sh /APP/docker-entrypoint.sh
ENTRYPOINT ["/bin/sh", "/APP/docker-entrypoint.sh"]

# 9. bash 로 대기 상태 전환
CMD     ["/sbin/init", "bash"]
